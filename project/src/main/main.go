package main

import (
  "aes"
  "fmt"
  "os"
  "strconv"
)

var testCases = []struct {
  key      []byte
  in       []byte
}{
  // C.1 AES-128 (Nk=4, Nr=10)
  {[]byte {
    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
    0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
  }, []byte {
    0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77,
    0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff,
  }},
  // C.2 AES-192 (Nk=6, Nr=12)
  {[]byte {
    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
    0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
    0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
  }, []byte {
    0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77,
    0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff,
  }},
  // C.3 AES-256 (Nk=8, Nr=14)
  {[]byte {
    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
    0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
    0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
    0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f,
  }, []byte {
    0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77,
    0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff,
  }},
}

func main() {
  if len(os.Args) != 2 {
    fmt.Println("Error: incorrect argument ammount.\nUsage: aes [test case]")
  } else {
    if testCaseNum, err := strconv.Atoi(os.Args[1]); err == nil && 0 <= testCaseNum && testCaseNum < len(testCases) {
      encrypted := aes.Encrypt(testCases[testCaseNum].in, testCases[testCaseNum].key)
      aes.Decrypt(encrypted, testCases[testCaseNum].key)
    } else {
      fmt.Println(fmt.Sprintf("Error: test case must be integer between %d and %d", 0, len(testCases)))
    }
  }
}
